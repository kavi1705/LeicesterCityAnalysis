---
title: "Leicester City FC"
subtitle: Post Match Analysis
author: Kavi Luchowa
subject: Games
format: revealjs
editor: visual
---

```{r setup, include=FALSE}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
library(stringr)
library(patchwork)
library(SBpitch)
library(ggrepel)
library(grid)

# Load the data
leic_cov <- read.csv("statsbomb_events_3895362.csv") 
leic_hull <- read.csv("statsbomb_events_3895406.csv")

```

```{r functions, include = FALSE}
# Functions to get required visualisation
getObv <- function(game, teamName, gameName){
  obv <- game %>% subset(team == teamName)
  sum_obv <- obv %>%
    group_by(player) %>%
    summarise(total_obv_for = sum(obv_for_net, na.rm = TRUE))
  
  sum_obv <- sum_obv %>%
    mutate(color = ifelse(total_obv_for >= 0, "Positive", "Negative"))
  
  # Create a horizontal bar graph
  ggplot(sum_obv, aes(x = player, y = total_obv_for, fill = color)) +
    geom_bar(stat = "identity", color = "black") +
    geom_text(aes(label = player, y = 0), 
              position = position_dodge(width = 0.9), color = "white")+
    coord_flip() +  # Flip the coordinates to make it horizontal
    scale_fill_manual(values = c("Positive" = "darkblue", "Negative" = "skyblue")) +
    labs(title = "Individual Player OBV",
         subtitle = gameName,
         y = "Total OBV") +
    theme_minimal() +
    guides(fill = FALSE)+
    theme(axis.text.y = element_blank(),
          panel.background = element_rect('darkgrey'), 
          panel.border = element_blank(), 
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          plot.title = element_text(margin = margin(r = 5, b = 5), face="bold",size = 32.5, 
                                    colour = "black", hjust = 0.5),
          plot.subtitle = element_text(margin = margin(r = 5, b = 5),size = 16, 
                                    colour = "black", hjust = 0.5))
  
}

getShotMap <- function(game, teamName, gameName){
  shots <- game %>% filter(type == "Shot")
  shots$location.x <- sapply(shots$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  shots$location.y <- sapply(shots$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  shots$end_location.x <- sapply(shots$shot_end_location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  shots$end_location.y <- sapply(shots$shot_end_location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  
  teamShots <- shots %>% subset(team == teamName)
  
  shotmapxgcolors <- c("#192780", "#2a5d9f", "#7F0000", "#5F0000")
  # Define the danger zone
  danger_zone <- teamShots %>%
    filter(location.x >= 102 & (location.y < 50 & location.y > 30))
  danger_zone_shots <- nrow(danger_zone)
  
  ggplot() +
    annotate("rect",xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) + 
    annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "black", size = 0.6)+ 
    annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+ 
    annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
    theme(rect = element_blank(),
          line = element_blank()) +
    # Danger Zone - Rectangle
    annotate("rect", xmin = 102, xmax= 120, ymin = 30, ymax = 50, fill = "yellow", alpha = 0.2) + 
    
    # add penalty spot right
    annotate("point", x = 108 , y = 40, colour = "black", size = 1.05) + annotate("path", colour = "black", size = 0.6,
                                                                                  x=60+10*cos(seq(0,2*pi,length.out=2000)),
                                                                                  y=40+10*sin(seq(0,2*pi,length.out=2000)))+
    # add centre spot
    annotate("point", x = 60 , y = 40, colour = "black", size = 1.05) + annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
                                                                                 y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") + 
    annotate("path", x=107.84-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6, y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="black") +
    geom_point(data = teamShots, aes(x = location.x, y = location.y, fill = shot_statsbomb_xg, shape = shot_body_part, size = shot_statsbomb_xg),
               alpha = 0.8) +
    theme(axis.text.x=element_blank(),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          plot.caption=element_text(size=1, hjust=1, vjust=1),
          plot.subtitle = element_text(margin = margin(b =0 ),
                                       size = 10, hjust = 0.5), 
          axis.text.y=element_blank(),
          plot.title = element_text(margin = margin(r = 0, b = 5),
                                    face="bold",size = 14, 
                                    colour = "black", hjust = 0.5),
          legend.title = element_text(size = 8),  # Smaller legend title
    legend.text = element_text(size = 3),   # Smaller legend text
    legend.key.size = unit(0.3, "cm"),
          #plot.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = "pt"),
          legend.direction = "vertical",
          axis.ticks=element_blank(),
          aspect.ratio = c(65/100),
          plot.background = element_rect(fill = "darkgrey"),
          strip.text.x = element_text(size=2)) +
    labs(title = gameName, subtitle = paste(teamName, "Shots in Danger Zone: ", danger_zone_shots)) + 
    guides(fill = guide_colourbar(title.position = "top", size = 3),
           shape = guide_legend(override.aes = list(size = 3, fill = "black")),
           ) + 
    coord_flip(xlim = c(85, 125)) +
    scale_shape_manual(values = c("Head" = 21, "Right Foot" = 23, "Left Foot" = 24), name ="")
}

getDangerMap <- function(game, teamName, gameName) {
  passes <- game %>% filter(type == "Pass")
  passes$location.x <- sapply(passes$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  passes$location.y <- sapply(passes$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  passes$end_location.x <- sapply(passes$pass_end_location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  passes$end_location.y <- sapply(passes$pass_end_location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  
  teamPasses <- passes %>% subset(team == teamName)
  dangerousPasses <- teamPasses %>% filter(end_location.x >= 102 & (end_location.y >= 30 & end_location.y <=50)) %>% 
    select(player, type, location.x, location.y, end_location.x, end_location.y, obv_for_net)
  
  carries <- game %>% filter(type == "Carry")
  carries$location.x <- sapply(carries$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  carries$location.y <- sapply(carries$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  carries$end_location.x <- sapply(carries$carry_end_location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  carries$end_location.y <- sapply(carries$carry_end_location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  
  teamCarries <- carries %>% subset(team == teamName)
  dangerCarries <- teamCarries %>% filter(location.x >= 60 & (end_location.x - location.x) > 10) %>% 
    select(player, type, location.x, location.y, end_location.x, end_location.y, obv_for_net)
  
  dangerActions <- rbind(dangerousPasses, dangerCarries)
  
  create_Pitch(grass_colour = "grey", line_colour = "#8F8F8F",
               background_colour = "grey", goal_colour = "#000000",
               goaltype = "line", middlethird = FALSE, BasicFeatures = FALSE,
               JdeP = FALSE, padding = 1) +
    geom_segment(data = dangerActions, aes(x = location.x, y = location.y,
                                    xend = end_location.x, yend = end_location.y,
                                    colour = type), 
    lineend = "round",
    size = 0.5,
    arrow = arrow(length = unit(0.07, "inches"), 
                  ends = "last", type = "open")) +
    scale_color_manual(values = c("Pass" = "blue", "Carry" = "skyblue")) +  # Set arrow colors based on actionType
    labs(title = paste(teamName, "Passes into Danger Zone"), subtitle = gameName) +
    scale_y_reverse() +
    coord_fixed(ratio = 105/100) +
    theme(axis.text.y = element_blank(),
          plot.title = element_text(margin = margin(r = 2, b = 5, t = 10, l = 5), face="bold",size = 16, 
                                    colour = "black", hjust = 0.5, vjust = 2),
          plot.subtitle = element_text(margin = margin(r = 5, b = 0),size = 12, 
                                       colour = "black", hjust = 0.5),
          plot.margin = margin(0, 1, 0.1, 1) 
          ) 
  
  
}


getDefenseMap <- function(game, teamName, gameName){
  
  game <- game %>% filter(type =="Pressure" | type =="Ball Recovery" | type == "Foul Committed" | type == "Block" | type == "Interception")
  game$location.x <- sapply(game$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][1]))
  game$location.y <- sapply(game$location, function(x) as.numeric(str_extract_all(x, "\\d+\\.?\\d+")[[1]][2]))
  
  heatmap <- game %>%
    subset(team == teamName) %>% 
    mutate(
      location.x = pmin(120, pmax(0, location.x)),
      location.y = pmin(80, pmax(0, location.y)),
      xbin = cut(location.x, breaks = seq(from=0, to=120, by = 20),include.lowest=TRUE),
      ybin = cut(location.y, breaks = seq(from=0, to=80, by = 20),include.lowest=TRUE)) %>% 
    group_by(xbin, ybin) %>%
    summarise(
      bin_DA = n(),
      location.x = median(location.x),
      location.y = median(location.y)
    )
  
  defensiveactivitycolors <- c("#dc2429", "#dc2329", "#df272d", "#df3238", "#e14348", "#e44d51", "#e35256", "#e76266", "#e9777b", 
                               "#ec8589", "#ec898d", "#ef9195", "#ef9ea1", "#f0a6a9", "#f2abae", "#f4b9bc", "#f8d1d2", "#f9e0e2",
                               "#f7e1e3", "#f5e2e4", "#d4d5d8", "#d1d3d8", "#cdd2d6", "#c8cdd3", "#c0c7cd", "#b9c0c8", "#b5bcc3",
                               "#909ba5", "#8f9aa5", "#818c98", "#798590", "#697785", "#526173", "#435367", 
                               "#3a4b60", "#2e4257", "#1d3048", "#11263e", "#11273e", "#0d233a", "#020c16")
  
  ggplot(data= heatmap, aes(x = location.x, y = location.y, fill = bin_DA, group = bin_DA)) + 
    geom_bin2d(binwidth = c(20, 80), position = "identity", alpha = 0.9) + #2
    annotate("rect",xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "white", size = 0.6) + 
    annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "white", size = 0.6) + 
    annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "white", size = 0.6) + 
    annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "white", size = 0.6) + 
    annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) + 
    annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) + 
    annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "white", size = 0.6)+ 
    annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
    annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
    theme(rect = element_blank(), line = element_blank()) +
    annotate("point", x = 12 , y = 40, colour = "white", size = 1.05) + annotate("point", x = 108 , y = 40, colour = "white", size = 1.05) + 
    annotate("path", colour = "white", size = 0.6, x=60+10*cos(seq(0,2*pi,length.out=2000)), y=40+10*sin(seq(0,2*pi,length.out=2000)))+
    annotate("point", x = 60 , y = 40, colour = "white", size = 1.05) + 
    annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="white") + 
    annotate("path", x=108-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="white") +
    theme(axis.text.x=element_blank(),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          plot.caption=element_text(size=10, hjust=0.5, vjust=0.5), plot.subtitle = element_text(size = 12, hjust = 0.5), 
          axis.text.y=element_blank(),
          legend.title = element_blank(), legend.text=element_text(size=10),
          legend.key.size = unit(1.5, "cm"),
          plot.title = element_text(margin = margin(r = 10, b = 10), face="bold",size = 14, colour = "black", hjust = 0.5), legend.direction =
            "vertical",
          axis.ticks=element_blank(),
          plot.background = element_rect(fill = "darkgrey"),
          strip.text.x = element_text(size=13)) + #4
    scale_y_reverse() + #5
    scale_fill_gradientn(colors = c("#FFFFFF", "#FF0000"), na.value = "grey", values = scales::rescale(c(0, max(heatmap$bin_DA)))) +
    labs(title = paste(teamName, "Defensive Actions Heat Map"), subtitle = gameName) + #7
    coord_fixed(ratio = 95/100) +
    annotation_custom(grob = linesGrob(arrow=arrow(type="open", ends="last", length=unit(2.55,"mm")), gp=gpar(col="black", fill=NA, lwd=2.2)),
                      xmin=25, xmax = 95, ymin = -83, ymax = -83) + #9 
    guides(fill = guide_legend(reverse = TRUE))
  
}


```

# Overview
- 6th August 2023 vs Coventry (W2-1) -> xG 1.5 - 1.8
- 2nd September 2023 vs Hull (L1-0) -> xG 1.2 - 0.3


## OBV
```{r out.height=c('100%','100%'), fig.show='hold'}

plot2 <- getObv(leic_hull, "Leicester City", "Leicester v Hull (02/09/2023)")

plot1<- getObv(leic_cov, "Leicester City", "Leicester v Coventry (06/08/2023)")

# Combine the plots and adjust their sizes
combined_plot <- plot1 + plot2 + plot_layout(widths = c(1, 1))
combined_plot

```

## Shots
vs Coventry for and against
```{r}

plot1<- getShotMap(leic_cov, "Leicester City", "Leicester v Coventry (06/08/2023)")
plot2 <- getShotMap(leic_cov, "Coventry City", "Leicester v Coventry (06/08/2023)")

# Combine the plots and adjust their sizes
combined_plot <- plot1 + plot2 + plot_layout(widths = c(1, 1))
combined_plot

```

## Shots
vs Hull for and against

```{r}
plot1<- getShotMap(leic_hull, "Leicester City", "Leicester v Hull (02/09/2023)")
plot2 <- getShotMap(leic_hull, "Hull City", "Leicester v Hull (02/09/2023)")

# Combine the plots and adjust their sizes
combined_plot <- plot1 + plot2 + plot_layout(widths = c(1, 1))
combined_plot
```

## Passes and Carries
vs Coventry for and against
```{r}
plot1 <- getDangerMap(leic_cov, "Leicester City", "Leicester v Coventry (06/08/2023)")
plot2 <- getDangerMap(leic_cov, "Coventry City", "Leicester v Coventry (06/08/2023)")

# Combine the plots and adjust their sizes
combined_plot <- plot1 + plot2 + plot_layout(widths = c(2, 2))
combined_plot
```

## Passes and Carries
vs Hull for and against
```{r}
plot1 <- getDangerMap(leic_hull, "Leicester City", "Leicester v Hull (02/09/2023)")
plot2 <- getDangerMap(leic_hull, "Hull City", "Leicester v Hull (02/09/2023)")

# Combine the plots and adjust their sizes
combined_plot <- plot1 + plot2 + plot_layout(widths = c(1, 1))
combined_plot
```

## Defensive
vs Coventry
```{r}
getDefenseMap(leic_cov, "Leicester City", "Leicester v Coventry (06/08/2023)")
```

## Defensive
vs Hull

```{r}
getDefenseMap(leic_hull, "Leicester City", "Leicester v Hull (02/09/2023)")
```

## Conclusions
- xG, shots in danger zone similar in both games
- Shots in danger zone allowed was much better in game vs Hull
- Passes allowed into danger zone again better vs Hull
- Defended much deeper vs Coventry

## Futher...
- Number of players in box from key passes?
- Are carries converting to danger zone shots?
- How can we ensure high press produces result?




